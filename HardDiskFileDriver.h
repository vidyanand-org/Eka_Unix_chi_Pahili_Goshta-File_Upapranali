#pragma once
#include"Global.h"
#include"BufferCache.h"


#define MAX_DISK_SIZE				( MAX_NO_OF_DISK_BLOCKS * BLOCK_SIZE )

#define BOOT_BLOCK_START_ADDRESS	0
#define BOOT_BLOCK_SIZE 			BLOCK_SIZE

#define SUPER_BLOCK_START_ADDRESS	( BOOT_BLOCK_START_ADDRESS + BOOT_BLOCK_SIZE )
#define SUPER_BLOCK_SIZE			BLOCK_SIZE

#define DILB_BLOCK_START_ADDRESS	( SUPER_BLOCK_START_ADDRESS + SUPER_BLOCK_SIZE )
#define ON_DISK_INODE_SIZE			64
#define ON_DISK_INODE_PER_BLOCK		( BLOCK_SIZE / ON_DISK_INODE_SIZE )
#define TOTAL_ON_DISK_INODE			4096
#define TOTAL_DILB_BLOCKS			( TOTAL_ON_DISK_INODE / ON_DISK_INODE_PER_BLOCK )
#define DILB_BLOCK_SIZE				( BLOCK_SIZE * TOTAL_DILB_BLOCKS )

#define DATA_BLOCK_START_ADDRESS	( DILB_BLOCK_START_ADDRESS + DILB_BLOCK_SIZE )
#define DATA_BLOCK_SIZE				( MAX_DISK_SIZE - BOOT_BLOCK_SIZE - SUPER_BLOCK_SIZE - DILB_BLOCK_SIZE )

#define FIRST_INVALID_ADDRESS		( DATA_BLOCK_START_ADDRESS + DATA_BLOCK_SIZE )


extern UI8 ui8FormatHardDiskFile(void);
extern UI8 ui8ReadBlockFromHardDiskFile(BUF_STRUCT* pBufToFill);
extern UI8 ui8WriteBlockToHardDiskFile(BUF_STRUCT* pBufToEmpty);